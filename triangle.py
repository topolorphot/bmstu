def minimum_total(triangle):
    """
    Находит минимальную сумму пути от вершины до основания треугольника.
    Алгоритмическая сложность: O(n^2)
    """

    # Копируем последнюю строку (динамическое программирование снизу вверх)
    dp = triangle[-1][:]
    
    # Начинаем снизу вверх
    for i in range(len(triangle) - 2, -1, -1):
        for j in range(len(triangle[i])):
            dp[j] = triangle[i][j] + min(dp[j], dp[j + 1])
    
    return dp[0]


if __name__ == "__main__":
    t1 = [[2], [3, 4], [6, 5, 7], [4, 1, 8, 3]]
    print("Минимальная сумма пути:", minimum_total(t1))  # → 11

    t2 = [[-1], [2, 3], [1, -1, -3], [4, 2, 1, 3]]
    print("Минимальная сумма пути:", minimum_total(t2))  # → 0
